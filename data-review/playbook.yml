---
- name: adding hostname
  hosts: webserver
  become: true
  vars:
   - firewall_pkg: firewalld
   - firewall_svc: firewalld
   - web_pkg: httpd
   - web_svc: httpd
   - ssl_pkg: mod_ssl
   - httpdconf_src: files/httpd.conf
   - httpdconf_dest: /etc/httpd/conf/httpd.conf
   - htaccess_src: files/.htaccess
   - secrets_dir: /etc/httpd/secrets
   - secrets_src: files/htpasswd
   - secrets_dest: "{{secrets_dir}}/htpasswd"
   - web_root: /var/www/html

  tasks:
       
   - name: installing firewalld and ssl and httpd
     yum:
      name:
       - "{{ firewall_pkg }}"
       - "{{ web_pkg }}"  
       - "{{ ssl_pkg }}"
      state: latest 
    
   - name: copy httpdconf file src to dest  
     copy:
      src: "{{ httpdconf_src }}"
      dest: "{{ httpdconf_dest}}"
      owner: root
      group: root
      mode: '0644'     
      
   - name: password files
     file:
      path: "{{ secrets_dir }}"
      owner: apache
      group: apache
      mode: 0500
      state: directory
  
   - name: set permission secret fies
     copy:
      src: "{{ secrets_src }}"
      dest: "{{ secrets_dest }}"
      owner: apache
      group: apache
      mode: '0400'

   - name: create htaccess
     copy:
      src: "{{ htaccess_src }}"
      dest: "{{ web_root }}/.htaccess"
      owner: apache
      group: apache
      mode: '0400'

   - name: hostname
     copy:
      content: |
         {{ ansible_fqdn }} ({{ ansible_default_ipv4.address }}) has been customized by Ansible.
      dest: "{{ web_root }}/index.html"    

   - name: firewall service 
     service:
      name: firewalld
      enabled: yes
      state: started 

   - name: https service
     firewalld:
      service: https
      permanent: true
      state: enabled 

   - name: enable webservice
     service:
      name: "{{ web_svc }}"     
      state: started
      enabled: yes 

- name: second play
  hosts: localhost
  vars:
   web_user: guest
  vars_files:
   - /home/student/data-review/vars/secret.yml
  tasks:
   
   - name: request content from serverb.lab.example.com
     uri:
      url: https://serverb.lab.example.com
      method: GET
      force_basic_auth: yes
      user: "{{ web_user }}"
      password: "{{ web_pass }}"
      validate_certs: no
      return_content: yes
      status_code: 200
     register: auth_test

   - name: print content returned from the web server
     debug:
      msg: auth_test.content      

